version: "3.5"

x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://127.0.0.1:3100/loki/api/v1/push"

services:
  grafana:
    # Dashboard UI
    <<: *logging
    image: grafana/grafana
    container_name: hal-grafana
    environment:
      - GF_INSTALL_PLUGINS=andig-darksky-datasource,agenty-flowcharting-panel,grafana-clock-panel,natel-discrete-panel
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_PATHS_CONFIG=/var/lib/grafana/custom.ini
    ports:
      - 3000:3000
    volumes:
      - /media/bgalhardo/Bahamut/home-automation/grafana-config:/var/lib/grafana
    restart: always
    networks:
      - hal-network

  prometheus:
    # Database
    <<: *logging
    image: prom/prometheus:latest
    container_name: hal-prometheus
    command:
      - --config.file=/prometheus/prometheus.yml
      - --storage.tsdb.retention.size=700GB
#      - --web.enable-admin-api
    ports:
      - 9090
    volumes:
      - /media/bgalhardo/Bahamut/home-automation/prometheus-db:/prometheus
    restart: always
    networks:
      - hal-network

  smart_devices:
    # broadcast smart plug measurements
    <<: *logging
    build: ./smart-devices
    container_name: hal-smart-devices
    environment:
      - DISCOVERY_PERIOD=60
      - UPDATE_PERIOD=5
      - BROADCAST_IP=192.168.8.255
      - SERVER_PORT=9999
    restart: always
    network_mode: host
#    ports:
#      - 9999
#    networks:
#      - hal-network

  speedtest:
    # endpoint for internet speed tests
    <<: *logging
    image: jraviles/prometheus_speedtest:latest
    container_name: hal-speedtest
    ports:
      - 9516:9516
    networks:
      - hal-network

  cadvisor:
    # container monitoring
    <<: *logging
    image: gcr.io/google-containers/cadvisor:latest
    container_name: hal-cadvisor
    command:
      - '--housekeeping_interval=10s'
      - '--disable_metrics=diskIO,tcp,udp,percpu,sched,process'
    ports:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - hal-network

  consul:
    # log sensor ips
    <<: *logging
    image: consul:latest
    command: "agent -server -bootstrap-expect 1 -ui -client 0.0.0.0 -node=HAL9000"
    container_name: hal-consul
    ports:
      - 8500:8500
    networks:
      - hal-network

  consul-esm:
    # allows health check to consul external services
    <<: *logging
    build: consul-esm
    container_name: hal-consul-esm
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    networks:
      - hal-network

  loki:
    # logger
    <<: *logging
    image: grafana/loki:master
    container_name: hal-loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
#    volumes:
#      - ./loki/config.yml:/etc/loki/config.yaml
#      - /data/volumes/loki:/data/loki
    networks:
      - hal-network

  restreamer:
    # to convert rtsp -> html
    <<: *logging
    image: datarhei/restreamer:latest
    container_name: hal-restreamer
    environment:
      - RS_INPUTSTREAM=rtsp://admin:notoo7luke@192.168.8.99:10554/tcp/av0_0
      - RS_USERNAME=admin
      - RS_PASSWORD=admin
    ports:
      - 8080:8080
    networks:
      - hal-network

  #ipcam-control:
  #  # TODO add cam password as env
  #  # sends commands to ipcam
  #  build: ipcam-control
  #  container_name: hal-ipcam-control
  #  restart: always
  #  networks:
  #    - hal-network
  #   records ipcam feed
  #ipcam-record:
  #  build: ./ipcam-record
  #  container_name: automation-ipcam-record
  #  restart: always
  #  volumes:
  #    - /media/bgalhardo/Bahamut/home-automation/ipcam-videos:/videos/


networks:
  hal-network:
    name: hal-network